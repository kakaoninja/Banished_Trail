[gd_scene load_steps=6 format=2]

[ext_resource path="res://Sprites/world/scollingBackground.png" type="Texture" id=1]
[ext_resource path="res://Scenes/Maps/Background.gd" type="Script" id=2]
[ext_resource path="res://Sprites/EffectResources/bayer16tile2.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D dither_texture;

uniform vec2 player_position;

uniform float circle_radius		: hint_range (0.1, 0.6);
uniform int screen_height;
uniform int screen_width;
uniform float dither_size : hint_range (0.0, 0.5);

uniform float tiling_scale = 1.0;
const float DEFAULT_SCALE = 8.0;

float circle(vec2 position, float radius, float feather)
{
	return smoothstep(radius, radius + feather, length(position - player_position));
}


void fragment(){
	vec4 color = texture (TEXTURE, UV);
	
	float xcoord = floor (mod (UV.x / TEXTURE_PIXEL_SIZE.x, 2.0));
	float ycoord = floor (mod (UV.y / TEXTURE_PIXEL_SIZE.y, 2.0));
	
	float dither_effect = mod (xcoord + ycoord, 2.0);
	
	vec2 uv = FRAGCOORD.xy;
	vec2 tiling_uv = uv / (200.0 * tiling_scale * -1.0);
	vec4 dither_result = texture(dither_texture, tiling_uv);
	
	dither_effect = 1.0 - 0.1 * dither_effect;
	
	float inner = 1.0 - circle(vec2(UV.x, UV.y), circle_radius, 0.01 / dither_result.g);
	
	COLOR = color;
	COLOR.a -= inner;
	
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/player_position = Vector2( 0.5, 0.5 )
shader_param/circle_radius = 0.1
shader_param/screen_height = 480
shader_param/screen_width = 270
shader_param/dither_size = 0.5
shader_param/tiling_scale = 1.0
shader_param/dither_texture = ExtResource( 3 )

[node name="SimulationBG" type="ParallaxBackground"]
layer = -10

[node name="ParallaxLayer" type="ParallaxLayer" parent="."]
motion_mirroring = Vector2( 960, 960 )

[node name="Sprite" type="Sprite" parent="ParallaxLayer"]
material = SubResource( 2 )
texture = ExtResource( 1 )
script = ExtResource( 2 )
